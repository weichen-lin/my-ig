version: '3.7'

volumes:
  myig-postgre: {}

services:
  backend:
    container_name: myig-backend
    image: myig-backend
    build:
      context: ./backend
      dockerfile: ./build/dev.Dockerfile
    environment: &db_config
      - POSTGRES_HOST=${MYIG_DB_HOST}
      - POSTGRES_DB=${MYIG_DB_NAME}
      - POSTGRES_USER=${MYIG_DB_USER}
      - POSTGRES_PASSWORD=${MYIG_DB_PASSWORD}
      - POSTGRES_PORT=${MYIG_DB_PORT}
    env_file: .local.env
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    restart: on-failure

  postgres:
    container_name: ${MYIG_DB_HOST}
    image: postgres:13-alpine
    environment: *db_config
    volumes:
      - myig-postgre:/var/lib/postgresql/data
    env_file: .local.env
    ports:
      - '5432:${MYIG_DB_PORT}'

  frontend:
    container_name: myig-frontend
    image: myig-frontend
    build:
      context: ./frontend
      dockerfile: ./build/dev.Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - '3000:3000'
    depends_on:
      - backend
    restart: on-failure

  # nginx:
  #   <<: *dev
  #   container_name: dashboard_nginx
  #   image: nginx:alpine
  #   profiles:
  #     - frontend
  #   ports:
  #     - '80:80'
  #   depends_on:
  #     - backend
  #     - frontend
  #   volumes:
  #     - ./backend/staticfiles/:/staticfiles/
  #     - ./config/nginx/dev.conf:/etc/nginx/nginx.conf:ro
